cmake_minimum_required(VERSION 3.12)

include(pico_sdk_import.cmake)
project(picoeepromprogrammer C CXX ASM)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

pico_sdk_init()

add_executable(${PROJECT_NAME})

target_compile_options(
  ${PROJECT_NAME}
  PRIVATE -Wall
          -Wno-format # int != int32_t as far as the compiler is concerned
                      # because gcc has int32_t as long int
          -Wno-unused-function # we have some for the docs that aren't called
          -Wno-maybe-uninitialized
          -Wunused-variable)

target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_SOURCE_DIR}/include
                                                  ${PROJECT_BINARY_DIR})

target_sources(${PROJECT_NAME} PRIVATE src/main.cpp src/programmer.cpp
                                       src/xmodem.cpp src/console.cpp)

target_link_libraries(${PROJECT_NAME} PRIVATE pico_stdlib hardware_pio
                                              hardware_gpio hardware_clocks)

pico_generate_pio_header(${PROJECT_NAME}
                         ${CMAKE_CURRENT_LIST_DIR}/pio/addressbus.pio)
pico_generate_pio_header(${PROJECT_NAME}
                         ${CMAKE_CURRENT_LIST_DIR}/pio/databus.pio)

pico_enable_stdio_usb(${PROJECT_NAME} 1)
pico_enable_stdio_uart(${PROJECT_NAME} 0)
pico_add_extra_outputs(${PROJECT_NAME})
